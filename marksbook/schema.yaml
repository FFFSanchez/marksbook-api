openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/collections/:
    get:
      operationId: listCollections
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    post:
      operationId: createCollection
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
  /api/v1/collections/{id}/:
    get:
      operationId: retrieveCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    put:
      operationId: updateCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCollection
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this collection.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/bookmarks/:
    get:
      operationId: listBookmarks
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
          description: ''
      tags:
      - api
    post:
      operationId: createBookmark
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookmark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bookmark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bookmark'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
          description: ''
      tags:
      - api
  /api/v1/bookmarks/{id}/:
    get:
      operationId: retrieveBookmark
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Bookmark.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
          description: ''
      tags:
      - api
    put:
      operationId: updateBookmark
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Bookmark.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookmark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bookmark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bookmark'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBookmark
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Bookmark.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookmark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bookmark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bookmark'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBookmark
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Bookmark.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/users/:
    get:
      operationId: listMyUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/auth/users/me/:
    get:
      operationId: meMyUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meMyUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/users/{id}/:
    get:
      operationId: retrieveMyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this my user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateMyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this my user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this my user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this my user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/users/activation/:
    post:
      operationId: activationMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/auth/users/resend_activation/:
    post:
      operationId: resendActivationMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_password/:
    post:
      operationId: resetPasswordMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/users/reset_email/:
    post:
      operationId: resetUsernameMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/users/set_password/:
    post:
      operationId: setPasswordMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/auth/users/set_email/:
    post:
      operationId: setUsernameMyUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/auth/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/auth/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    Collection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bookmarks:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              author:
                type: string
                readOnly: true
              collection:
                type: string
              title:
                type: string
                readOnly: true
              description:
                type: string
                readOnly: true
              link:
                type: string
                format: uri
                maxLength: 200
                pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
                  .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
                  ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
                  0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                  -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\\
                  s]*)?\\z"
              type_of_link:
                enum:
                - website
                - book
                - article
                - music
                - video
                type: string
              image_file:
                type: string
                format: binary
                nullable: true
              image_url:
                type: string
                format: uri
                readOnly: true
                pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
                  .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
                  ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
                  0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                  -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\\
                  s]*)?\\z"
              pub_date:
                type: string
                format: date-time
                readOnly: true
              last_update:
                type: string
                format: date-time
                readOnly: true
            required:
            - link
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        pub_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
      required:
      - title
      - description
    Bookmark:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        collection:
          type: string
        title:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        link:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        type_of_link:
          enum:
          - website
          - book
          - article
          - music
          - video
          type: string
        image_file:
          type: string
          format: binary
          nullable: true
        image_url:
          type: string
          format: uri
          readOnly: true
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        pub_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
      required:
      - link
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 255
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 255
      required:
      - current_password
      - new_email
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
